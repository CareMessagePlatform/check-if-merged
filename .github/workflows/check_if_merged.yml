name: 'automate test for GH Action'

on:
  push:
    branches-ignore:
      - 'master'
      - 'staging'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup test
      run: |
        BRANCH=${GITHUB_REF#refs/heads/}
        git config --global user.email "test-run@github-actions.com"
        git config --global user.name "GH Actions"
        # create branchs locally
        git checkout master
        git checkout -b staging
        git checkout $BRANCH
        git checkout master
        # merge to master the current branch to apply changes that may impact
        # the build in next step.
        git merge $BRANCH
        # create a new branch not merged to staging
        git checkout -b other_branch
        git commit --allow-empty -am "commit"
    - name: "run check_if_merged"
      id: first_run
      with:
        test_run: 'true'
        destination_branch: staging
        source_ref: refs/heads/other_branch
      uses: ./
    - name: "test if other_branch IS NOT MERGED into staging. If not: merge it to staging"
      run: |
        if [[ ${{ steps.first_run.outputs.is_merged }} != "100" ]]
        then
          echo "expect other_branch not to be merged into staging but it is."
          exit 200
        else
          # merge other_branch to staging to check if the action is working
          git checkout staging
          git merge other_branch
          git checkout other_branch
        fi
    - name: "run check_if_merged"
      id: second_run
      uses: ./
      with:
        test_run: 'true'
        destination_branch: staging
        source_ref: refs/heads/other_branch
    - name: "test if other_branch IS MERGED into staging"
      run: |
        if [[ ${{ steps.second_run.outputs.is_merged }} != "0" ]]
        then
          echo "expect other_branch to be merged to staging but it isn't"
          exit 200
        fi

